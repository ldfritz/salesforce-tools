#!/usr/bin/env python
import configuration
import operation
import getopt
import json
import os
import pathlib
import sys


def print_help(error=False):
    help_message = """
usage: sf-cli COMMAND [OPTIONS] ARGS ...

Commands:

    download ID [FILENAME]
        Download the Attachment with the given ID.  Optionally, name the
        downloaded file FILENAME.

    query QUERY_STRING
        Return the results of the provided QUERY_STRING.

    upload FILE [ID]
        Create an Attachment with the contents of FILE. The Name will be
        the value of FILE.  Optionally, set the ParentId to ID.

General options:
  -h, --help           Display this message and exit.
""".strip()
    if error:
        print(error)
    print(help_message)
    sys.exit()

def identify_command():

def parse_options():

def general_options():

if __name__ == "__main__":
    parse_options()

    opts, args = getopt.gnu_getopt(sys.argv, "h", ["help"])
    [print_help() for o, a in opts if o in ("-h", "--help")]

    commands = {
        "upload": operation.upload_attachment,
        "download": operation.download_attachment,
        "query": operation.query
    }
    if sys.argv[1] not in commands:
        print_help("error: {} is not a valid command".format(sys.argv[1]))

    sf = operation.connect(config["username"], config["password"],
                           config["security_token"])
    config = configuration.load_config()
    command = commands[sys.argv[1]]
    command(sf, args, opts)
